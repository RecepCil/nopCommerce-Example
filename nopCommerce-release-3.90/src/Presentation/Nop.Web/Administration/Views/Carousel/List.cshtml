@model Nop.Admin.Models.Catalog.CarouselListModel

@using Nop.Core.Domain.Catalog

@{
        var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
        var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

        //page title
        ViewBag.Title = T("Admin.Catalog.Carousels").Text;
        //active menu item (system name)
        Html.SetActiveMenuItemSystemName("Carousels");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Catalog.Carousels")
        </h1>
        <div class="pull-right">
            <a href="@Url.Action("Create")" class="btn bg-blue">
                <i class="fa fa-plus-square"></i>
                @T("Admin.Common.AddNew")
            </a>
            <button type="submit" name="download-catalog-pdf" class="btn bg-purple">
                <i class="fa fa-file-pdf-o"></i>
                @T("Admin.Catalog.Products.List.DownloadPDF")
            </button>
            <button type="button" id="delete-selected" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Admin.Common.Delete.Selected")
            </button>
        </div>
    </div>
    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group" id="trials-grid" name="trials-grid">
                                    <div class="col-md-2">
                                        @Html.NopLabelFor(model => model.SearchDate)
                                    </div>
                                    <div class="col-md-3">
                                        @Html.NopEditorFor(model => model.SearchDate)
                                    </div>
                                    <div class="col-md-3">
                                        @Html.NopLabelFor(model => model.IsActive)
                                    </div>
                                    <div class="col-md-1">
                                        @Html.NopEditorFor(model => model.IsActive)
                                    </div>
                                    <div class="col-md-3">
                                        <span class="input-group-btn">

                                            <button type="button" id="trial" name="trial" class="btn btn-info btn-flat">
                                                <i class="fa fa-search"></i>
                                                @T("Admin.Common.Search")
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="carousels-grid"></div>

                        <script>
                            $(document).ready(function() {
                                $("#carousels-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("CarouselList", "Carousel"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData  
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)],
                                        @Html.Partial("_GridPagerMessages")
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [
                                        {
                                            field: "Id",
                                            headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/> ",
                                            width: 50
                                        }, {
                                            field: "Link",
                                            title: "@T("Admin.Catalog.Carousels.Fields.Link")",
                                            width: 200
                                        }, {
                                            field: "Image",
                                            title: "@T("Admin.Catalog.Carousels.Fields.Path")",
                                            template: '<img style="width:150px;height:150px;" src="#=Path#" />'
                                        },  {
                                            field: "Description",
                                            title: "@T("Admin.Catalog.Carousels.Fields.Description")",
                                            width: 200
                                        }, {
                                            field: "DisplayOrder",
                                            title: "@T("Admin.Catalog.Carousels.Fields.DisplayOrder")",
                                            width: 100
                                        },  {
                                            field: "Path",
                                            title: "@T("Admin.Catalog.Carousels.Fields.Path")",
                                            width: 300
                                        },  {
                                            field: "StartDate",
                                            title: "@T("Admin.Catalog.Carousels.Fields.StartDate")",
                                            width: 200,
                                            type: "date",
                                            format: "{0:G}"
                                        },  {
                                            field: "FinishDate",
                                            title: "@T("Admin.Catalog.Carousels.Fields.FinishDate")",
                                            width: 200,
                                            type: "date",
                                            format: "{0:G}"
                                        },  {
                                            field: "IsActive",
                                            title: "@T("Admin.Catalog.Carousels.Fields.IsActive")",
                                            width: 100,
                                            template: '# if(IsActive) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                        },  {
                                            field: "Id",
                                            title: "@T("Admin.Common.Edit")",
                                            width: 100,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '<a class="btn btn-default" href="Edit/#=Id#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>'
                                        }
                                    ]
                                });
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
                    var selectedIds = [];

                    $(document).ready(function () {
                        //search button
                        $('#search-carousels').click(function () {
                            //search
                            var grid = $('#carousels-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            //grid.dataSource.read(); we already loaded the grid above using "page" function
                            //clear selected checkboxes
                            selectedIds = [];
                            return false;
                        });

                          $('#trial').click(function(e) {
                              e.preventDefault();

                            var postData = {
                                SearchLink: $('#@Html.FieldIdFor(model => model.SearchLink)').val(),
                                SearchDate: $('#@Html.FieldIdFor(model => model.SearchDate)').val(),
                                IsActive: $('#@Html.FieldIdFor(model => model.IsActive)').is(':checked')
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("CarouselList", "Carousel"))",
                                data: postData,
                                complete: function(data) {
                                    ////reload grid
                                    var grid = $('#carousels-grid').data('kendoGrid');
                                    grid.dataSource.page(1);
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert(thrownError);
                                },
                                traditional: true
                            });

                            return false;
                        });

                        //delete selected
                        $('#delete-selected').click(function(e) {
                            e.preventDefault();

                            var postData = {
                                selectedIds: selectedIds
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("DeleteSelected", "Carousel"))",
                                data: postData,
                                complete: function(data) {
                                    //reload grid
                                    var grid = $('#carousels-grid').data('kendoGrid');
                                    grid.dataSource.read();
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert(thrownError);
                                },
                                traditional: true
                            });
                            return false;
                        });

                        $('#mastercheckbox').click(function () {
                            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                        });

                        //wire up checkboxes.
                        $('#carousels-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function (e) {
                            var $check = $(this);
                            if ($check.is(":checked") == true) {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked == -1) {
                                    //add id to selectedIds.
                                    selectedIds.push($check.val());
                                }
                            }
                            else {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked > -1) {
                                    //remove id from selectedIds.
                                    selectedIds = $.grep(selectedIds, function (item, index) {
                                        return item != $check.val();
                                    });
                                }
                            }
                            updateMasterCheckbox();
                        });
                    });
                    function additionalData() {
                        var data = {
                            SearchLink: $('#@Html.FieldIdFor(model => model.SearchLink)').val(),
                            SearchDate: $('#@Html.FieldIdFor(model => model.SearchDate)').val(),
                            IsActive: $('#@Html.FieldIdFor(model => model.IsActive)').is(':checked')
                        };
                        addAntiForgeryToken(data);
                        return data;
                    }

            function onDataBound(e) {
                $('#carousels-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function () {
                    var currentId = $(this).val();
                    var checked = jQuery.inArray(currentId, selectedIds);
                    //set checked based on if current checkbox's value is in selectedIds.
                    $(this).attr('checked', checked > -1);
                });
                        updateMasterCheckbox();
                    }

            function updateMasterCheckbox() {
                var numChkBoxes = $('#carousels-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').length;
                var numChkBoxesChecked = $('#carousels-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]:checked').length;
                $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
            }
        </script>

 

}
